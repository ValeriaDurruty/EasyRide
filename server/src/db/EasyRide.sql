-- MySQL Script generated by MySQL Workbench
-- Thu Sep 12 15:23:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema EasyRide
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EasyRide
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EasyRide` DEFAULT CHARACTER SET utf8 ;
USE `EasyRide` ;

-- -----------------------------------------------------
-- Table `EasyRide`.`Rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Rol` (
  `PK_Rol` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PK_Rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Empresa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Empresa` (
  `PK_Empresa` INT NOT NULL AUTO_INCREMENT,
  `razon_social` VARCHAR(60) NOT NULL,
  `cuit` BIGINT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `telefono` INT NOT NULL,
  PRIMARY KEY (`PK_Empresa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Usuario` (
  `PK_Usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `nro_documento` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `contrasenia` VARCHAR(60) NOT NULL,
  `FK_Rol` INT NOT NULL,
  `validar` TINYINT(1) NOT NULL,
  `FK_Empresa` INT NULL,
  PRIMARY KEY (`PK_Usuario`),
  INDEX `fk_Usuario_Rol_idx` (`FK_Rol` ASC),
  INDEX `fk_Usuario_Empresa1_idx` (`FK_Empresa` ASC),
  CONSTRAINT `fk_Usuario_Rol`
    FOREIGN KEY (`FK_Rol`)
    REFERENCES `EasyRide`.`Rol` (`PK_Rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_Empresa1`
    FOREIGN KEY (`FK_Empresa`)
    REFERENCES `EasyRide`.`Empresa` (`PK_Empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Estado_reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Estado_reserva` (
  `PK_Estado_reserva` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PK_Estado_reserva`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Marca` (
  `PK_Marca` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PK_Marca`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Modelo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Modelo` (
  `PK_Modelo` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `FK_Marca` INT NOT NULL,
  PRIMARY KEY (`PK_Modelo`),
  INDEX `fk_Modelo_Marca1_idx` (`FK_Marca` ASC),
  CONSTRAINT `fk_Modelo_Marca1`
    FOREIGN KEY (`FK_Marca`)
    REFERENCES `EasyRide`.`Marca` (`PK_Marca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Charter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Charter` (
  `PK_Charter` INT NOT NULL AUTO_INCREMENT,
  `patente` VARCHAR(45) NOT NULL,
  `capacidad` INT NOT NULL,
  `anio` INT NOT NULL,
  `FK_Empresa` INT NOT NULL,
  `FK_Modelo` INT NOT NULL,
  PRIMARY KEY (`PK_Charter`),
  INDEX `fk_Charter_Empresa1_idx` (`FK_Empresa` ASC),
  INDEX `fk_Charter_Modelo1_idx` (`FK_Modelo` ASC),
  CONSTRAINT `fk_Charter_Empresa1`
    FOREIGN KEY (`FK_Empresa`)
    REFERENCES `EasyRide`.`Empresa` (`PK_Empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Charter_Modelo1`
    FOREIGN KEY (`FK_Modelo`)
    REFERENCES `EasyRide`.`Modelo` (`PK_Modelo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Viaje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Viaje` (
  `PK_Viaje` INT NOT NULL AUTO_INCREMENT,
  `horario_salida` TIME NOT NULL,
  `horario_llegada` TIME NOT NULL,
  `cupo` INT NOT NULL,
  `precio` FLOAT NOT NULL,
  `fecha` DATE NOT NULL,
  `FK_Charter` INT NOT NULL,
  PRIMARY KEY (`PK_Viaje`),
  INDEX `fk_Viaje_Charter1_idx` (`FK_Charter` ASC),
  CONSTRAINT `fk_Viaje_Charter1`
    FOREIGN KEY (`FK_Charter`)
    REFERENCES `EasyRide`.`Charter` (`PK_Charter`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Reserva` (
  `PK_Reserva` INT NOT NULL AUTO_INCREMENT,
  `fecha_creacion` DATE NOT NULL,
  `FK_Estado_reserva` INT NOT NULL,
  `FK_Usuario` INT NOT NULL,
  `FK_Viaje` INT NOT NULL,
  PRIMARY KEY (`PK_Reserva`),
  INDEX `fk_Reserva_Estado_reserva1_idx` (`FK_Estado_reserva` ASC),
  INDEX `fk_Reserva_Usuario1_idx` (`FK_Usuario` ASC),
  INDEX `fk_Reserva_Viaje1_idx` (`FK_Viaje` ASC),
  CONSTRAINT `fk_Reserva_Estado_reserva1`
    FOREIGN KEY (`FK_Estado_reserva`)
    REFERENCES `EasyRide`.`Estado_reserva` (`PK_Estado_reserva`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reserva_Usuario1`
    FOREIGN KEY (`FK_Usuario`)
    REFERENCES `EasyRide`.`Usuario` (`PK_Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reserva_Viaje1`
    FOREIGN KEY (`FK_Viaje`)
    REFERENCES `EasyRide`.`Viaje` (`PK_Viaje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Provincia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Provincia` (
  `PK_Provincia` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`PK_Provincia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Localidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Localidad` (
  `PK_Localidad` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `FK_Provincia` INT NOT NULL,
  PRIMARY KEY (`PK_Localidad`),
  INDEX `fk_Localidad_Provincia1_idx` (`FK_Provincia` ASC),
  CONSTRAINT `fk_Localidad_Provincia1`
    FOREIGN KEY (`FK_Provincia`)
    REFERENCES `EasyRide`.`Provincia` (`PK_Provincia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Parada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Parada` (
  `PK_Parada` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `coordenadas` VARCHAR(45) NOT NULL,
  `FK_Empresa` INT NOT NULL,
  `FK_Localidad` INT NOT NULL,
  PRIMARY KEY (`PK_Parada`),
  INDEX `fk_Parada_Localidad1_idx` (`FK_Localidad` ASC),
  INDEX `fk_Parada_Empresa1_idx` (`FK_Empresa` ASC),
  CONSTRAINT `fk_Parada_Localidad1`
    FOREIGN KEY (`FK_Localidad`)
    REFERENCES `EasyRide`.`Localidad` (`PK_Localidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Parada_Empresa1`
    FOREIGN KEY (`FK_Empresa`)
    REFERENCES `EasyRide`.`Empresa` (`PK_Empresa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EasyRide`.`Viaje_Parada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EasyRide`.`Viaje_Parada` (
  `PK_Viaje_Parada` INT NOT NULL AUTO_INCREMENT,
  `orden` INT NOT NULL,
  `FK_Parada` INT NOT NULL,
  `FK_Viaje` INT NOT NULL,
  PRIMARY KEY (`PK_Viaje_Parada`),
  INDEX `fk_Parada_has_Viaje_Viaje1_idx` (`FK_Viaje` ASC),
  INDEX `fk_Parada_has_Viaje_Parada1_idx` (`FK_Parada` ASC),
  CONSTRAINT `fk_Parada_has_Viaje_Parada1`
    FOREIGN KEY (`FK_Parada`)
    REFERENCES `EasyRide`.`Parada` (`PK_Parada`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Parada_has_Viaje_Viaje1`
    FOREIGN KEY (`FK_Viaje`)
    REFERENCES `EasyRide`.`Viaje` (`PK_Viaje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `EasyRide`;

DELIMITER $$
USE `EasyRide`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EasyRide`.`Usuario_BEFORE_INSERT` BEFORE INSERT ON `Usuario` FOR EACH ROW
BEGIN
	    IF NEW.rol IN (1, 3) THEN
        SET NEW.validar = 1;
    ELSEIF NEW.rol = 2 THEN
        SET NEW.validar = 0;
    ELSE 
        SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'Rol no v√°lido';
    END IF;
END$$

USE `EasyRide`$$
CREATE DEFINER = CURRENT_USER TRIGGER `EasyRide`.`Viaje_BEFORE_INSERT` BEFORE INSERT ON `Viaje` FOR EACH ROW
BEGIN
    DECLARE capacidad INT;

    -- Obtener la capacidad del charter asociado
    SELECT c.capacidad INTO capacidad
    FROM Charter c
    WHERE c.PK_Charter = NEW.FK_Charter;

    -- Asignar la capacidad al campo cupo del viaje
    SET NEW.cupo = capacidad;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;